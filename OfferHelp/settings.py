"""
Django settings for OfferHelp project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from OfferHelp import private_settings

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o1j3$v+3@j@6k=6r(^_f-b&7s_k40nu86vuvudu85mpwzj*86d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'user',
    'finance',
    'netdisk',
    'captcha',    # 图形验证码的库，需要进行数据库的迁移migrate
    'rest_framework',

    'xadmin',
    'crispy_forms',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 国际化翻译中间件，启用后用户可自行选择支持的语言，否则将根据浏览器请求头
    # 顺序：在session，cache之后，common之前
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'mymiddleware.checklogin.MyMiddleWare',
]

# 配置根级 url
ROOT_URLCONF = 'OfferHelp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.i18n',    # 支持国际化，加在第一个
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'OfferHelp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'OfferHelp_db',
        'USER': private_settings.USER,
        'PASSWORD': private_settings.PASSWORD,
        'HOST': 'localhost',
        'PORT': 3306
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGES = (
#     ('en', 'English'),
#     ('zh-Hans', '中文简体'),
# )

# 默认的语言
LANGUAGE_CODE = 'zh-Hans'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),  # 翻译文件所在目录，请自行创建
)

TIME_ZONE = 'Asia/Shanghai'

# 是否启用翻译系统，设置false可提高性能
USE_I18N = True

# 是否启用数据的本地化格式，设置为True时将使用当前语言环境的格式显示日期和数字
USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# 静态资源访问的起始url
STATIC_URL = '/static/'
# 指定静态资源所在的目录
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
# 设置收集静态资源的路径(部署时使用)
STATIC_ROOT = os.path.join(BASE_DIR, 'collect_static/')

# 重写User类后，需指定当前使用的User类
AUTH_USER_MODEL = 'user.UserProfile'

# 使用视图类进行登陆和注销，成功后重定向的页面地址
LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/'    # 如有登录页中有next参数，则优先跳转至next对应的地址

# 重定向到登陆的页面：如使用login_required装饰器的视图
LOGIN_URL = 'user:login'

SESSION_COOKIE_AGE = 60 * 60 * 5
SESSION_EXPIRE_AT_BROWSER_CLOSE = True


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# 将邮件打印在终端上，便于测试
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'smtp.163.com'    # SMTP服务器主机
EMAIL_HOST_USER = private_settings.EMAIL_HOST_USER    # 邮箱账号
EMAIL_HOST_PASSWORD = private_settings.EMAIL_HOST_PASSWORD    # 这里填的是授权码
EMAIL_PORT = 25    # SMTP端口，默认25
EMAIL_USE_TLS = True    # 是否采用TLS安全连接
EMAIL_FROM = private_settings.EMAIL_FROM    # 显示的发件人


# 图形验证码库的配置：django-simple-captcha
# 设置 captcha 图片大小
CAPTCHA_IMAGE_SIZE = (100, 40)
# 字符个数
CAPTCHA_LENGTH = 4
# 超时(minutes)
CAPTCHA_TIMEOUT = 1
# 验证码类型：默认为普通字符
# CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.random_char_challenge'
# 简单计算
CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.math_challenge'


# RESTful接口相关的配置
REST_FRAMEWORK = {
    # 解决报错问题：'AutoSchema' object has no attribute 'get_link'
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.AutoSchema',
    # 其他分页选项
    # rest_framework.pagination.PageNumberPagination：常用，当前是第几页，每页多少条数据
    # rest_framework.pagination.CursorPagination：不能自己输入分页参数，防止用户填写任意页码和数据量来获取数据
    # Cursor分页默认以created字段来排序，如果表中没有该字段，可通过继承CursorPagination自定义ordering属性为id或其他字段
    # 这个是基于偏移量和limit的分页，即当前是第几条，还要获取多少条
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 2,
}


# 设置xadmin的系统标题和底部展示信息
# XADMIN_TITLE = 'OfferHelp个人自助平台'
# XADMIN_FOOTER_TITLE = 'power by Master-Sun'
